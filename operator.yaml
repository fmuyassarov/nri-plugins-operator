---
defaultChannel: alpha
name: nri-plugins-operator
schema: olm.package
---
image: docker.io/fmuyassarov/nri-plugins-operator-bundle:v0.0.1
name: nri-plugins-operator.v0.0.1
package: nri-plugins-operator
properties:
- type: olm.gvk
  value:
    group: config.nri
    kind: NriPluginDeployment
    version: v1alpha1
- type: olm.package
  value:
    packageName: nri-plugins-operator
    version: 0.0.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6Im5yaS1wbHVnaW5zLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJjb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJzZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6Im5yaS1wbHVnaW5zLW9wZXJhdG9yIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoibnJpLXBsdWdpbnMtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6Im5yaS1wbHVnaW5zLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJtZXRyaWNzLXJlYWRlciIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY2x1c3RlcnJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibnJpLXBsdWdpbnMtb3BlcmF0b3IifSwibmFtZSI6Im5yaS1wbHVnaW5zLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY29uZmlnLm5yaS92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIk5yaVBsdWdpbkRlcGxveW1lbnRcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibGFiZWxzXCI6IHtcbiAgICAgICAgXCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5XCI6IFwibnJpLXBsdWdpbnMtb3BlcmF0b3JcIixcbiAgICAgICAgXCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZVwiOiBcIm5yaXBsdWdpbmRlcGxveW1lbnQtc2FtcGxlXCIsXG4gICAgICAgIFwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieVwiOiBcImt1c3RvbWl6ZVwiLFxuICAgICAgICBcImFwcC5rdWJlcm5ldGVzLmlvL25hbWVcIjogXCJucmlwbHVnaW5kZXBsb3ltZW50XCIsXG4gICAgICAgIFwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZlwiOiBcIm5yaS1wbHVnaW5zLW9wZXJhdG9yXCJcbiAgICAgIH0sXG4gICAgICBcIm5hbWVcIjogXCJucmlwbHVnaW5kZXBsb3ltZW50LXNhbXBsZVwiLFxuICAgICAgXCJuYW1lc3BhY2VcIjogXCJrdWJlLXN5c3RlbVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJwbHVnaW5OYW1lXCI6IFwidG9wb2xvZ3ktYXdhcmVcIixcbiAgICAgIFwicGx1Z2luVmVyc2lvblwiOiBcInYwLjIuM1wiLFxuICAgICAgXCJzdGF0ZVwiOiBcInByZXNlbnRcIixcbiAgICAgIFwidmFsdWVzXCI6IHtcbiAgICAgICAgXCJucmlcIjoge1xuICAgICAgICAgIFwicGF0Y2hSdW50aW1lQ29uZmlnXCI6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXSIsImNhcGFiaWxpdGllcyI6IkJhc2ljIEluc3RhbGwiLCJjcmVhdGVkQXQiOiIyMDIzLTEyLTA3VDA5OjE0OjAxWiIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYxLjMyLjAiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJhbnNpYmxlLnNkay5vcGVyYXRvcmZyYW1ld29yay5pby92MSJ9LCJuYW1lIjoibnJpLXBsdWdpbnMtb3BlcmF0b3IudjAuMC4xIiwibmFtZXNwYWNlIjoicGxhY2Vob2xkZXIifSwic3BlYyI6eyJhcGlzZXJ2aWNlZGVmaW5pdGlvbnMiOnt9LCJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJraW5kIjoiTnJpUGx1Z2luRGVwbG95bWVudCIsIm5hbWUiOiJucmlwbHVnaW5kZXBsb3ltZW50cy5jb25maWcubnJpIiwidmVyc2lvbiI6InYxYWxwaGExIn1dfSwiZGVzY3JpcHRpb24iOiJUaGUgbnJpLXBsdWdpbnMtb3BlcmF0b3IgZGVwbG95cyBjb21tdW5pdHkgbWFpbnRhaW5lZCBucmktcGx1Z2lucyBpbnRvIGEgS3ViZXJuZXRlcyBjbHVzdGVyIiwiZGlzcGxheU5hbWUiOiJucmktcGx1Z2lucy1vcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiIiLCJtZWRpYXR5cGUiOiIifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiY29uZmlnLm5yaSJdLCJyZXNvdXJjZXMiOlsibnJpcGx1Z2luZGVwbG95bWVudHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZy5ucmkiXSwicmVzb3VyY2VzIjpbIm5yaXBsdWdpbmRlcGxveW1lbnRzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJ1cGRhdGUiLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhcGlleHRlbnNpb25zLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwiYXBwcyIsIiJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGViaW5kaW5ncyIsImNsdXN0ZXJyb2xlcyIsInJvbGViaW5kaW5ncyIsInJvbGVzIiwiZGFlbW9uc2V0cyIsImNvbmZpZ21hcHMiLCJzZXJ2aWNlYWNjb3VudHMiLCJuYW1lc3BhY2VzIiwic2VjcmV0cyJdLCJ2ZXJicyI6WyIqIl19LHsiYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XSwic2VydmljZUFjY291bnROYW1lIjoibnJpLXBsdWdpbnMtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn1dLCJkZXBsb3ltZW50cyI6W3sibGFiZWwiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWFuYWdlciIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJucmktcGx1Z2lucy1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJkZXBsb3ltZW50IiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6Im5yaS1wbHVnaW5zLW9wZXJhdG9yIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoibnJpLXBsdWdpbnMtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RyYXRlZ3kiOnt9LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJhbm5vdGF0aW9ucyI6eyJrdWJlY3RsLmt1YmVybmV0ZXMuaW8vZGVmYXVsdC1jb250YWluZXIiOiJtYW5hZ2VyIn0sImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzcGVjIjp7ImFmZmluaXR5Ijp7Im5vZGVBZmZpbml0eSI6eyJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7Im5vZGVTZWxlY3RvclRlcm1zIjpbeyJtYXRjaEV4cHJlc3Npb25zIjpbeyJrZXkiOiJrdWJlcm5ldGVzLmlvL2FyY2giLCJvcGVyYXRvciI6IkluIiwidmFsdWVzIjpbImFtZDY0IiwiYXJtNjQiLCJwcGM2NGxlIiwiczM5MHgiXX0seyJrZXkiOiJrdWJlcm5ldGVzLmlvL29zIiwib3BlcmF0b3IiOiJJbiIsInZhbHVlcyI6WyJsaW51eCJdfV19XX19fSwiY29udGFpbmVycyI6W3siYXJncyI6WyItLXNlY3VyZS1saXN0ZW4tYWRkcmVzcz0wLjAuMC4wOjg0NDMiLCItLXVwc3RyZWFtPWh0dHA6Ly8xMjcuMC4wLjE6ODA4MC8iLCItLWxvZ3Rvc3RkZXJyPXRydWUiLCItLXY9MCJdLCJpbWFnZSI6Imdjci5pby9rdWJlYnVpbGRlci9rdWJlLXJiYWMtcHJveHk6djAuMTMuMSIsIm5hbWUiOiJrdWJlLXJiYWMtcHJveHkiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6ODQ0MywibmFtZSI6Imh0dHBzIiwicHJvdG9jb2wiOiJUQ1AifV0sInJlc291cmNlcyI6eyJsaW1pdHMiOnsiY3B1IjoiNTAwbSIsIm1lbW9yeSI6IjEyOE1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjVtIiwibWVtb3J5IjoiNjRNaSJ9fSwic2VjdXJpdHlDb250ZXh0Ijp7ImFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiI6ZmFsc2UsImNhcGFiaWxpdGllcyI6eyJkcm9wIjpbIkFMTCJdfX19LHsiYXJncyI6WyItLWhlYWx0aC1wcm9iZS1iaW5kLWFkZHJlc3M9OjY3ODkiLCItLW1ldHJpY3MtYmluZC1hZGRyZXNzPTEyNy4wLjAuMTo4MDgwIiwiLS1sZWFkZXItZWxlY3QiLCItLWxlYWRlci1lbGVjdGlvbi1pZD1ucmktcGx1Z2lucy1vcGVyYXRvciJdLCJlbnYiOlt7Im5hbWUiOiJBTlNJQkxFX0dBVEhFUklORyIsInZhbHVlIjoiZXhwbGljaXQifV0sImltYWdlIjoiZ2hjci5pby9jb250YWluZXJzL25yaS1wbHVnaW5zLW9wZXJhdG9yOnVuc3RhYmxlIiwibGl2ZW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvaGVhbHRoeiIsInBvcnQiOjY3ODl9LCJpbml0aWFsRGVsYXlTZWNvbmRzIjoxNSwicGVyaW9kU2Vjb25kcyI6MjB9LCJuYW1lIjoibWFuYWdlciIsInJlYWRpbmVzc1Byb2JlIjp7Imh0dHBHZXQiOnsicGF0aCI6Ii9yZWFkeXoiLCJwb3J0Ijo2Nzg5fSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6NSwicGVyaW9kU2Vjb25kcyI6MTB9LCJyZXNvdXJjZXMiOnsibGltaXRzIjp7ImNwdSI6IjUwMG0iLCJtZW1vcnkiOiI3NjhNaSJ9LCJyZXF1ZXN0cyI6eyJjcHUiOiIxMG0iLCJtZW1vcnkiOiIyNTZNaSJ9fSwic2VjdXJpdHlDb250ZXh0Ijp7ImFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiI6ZmFsc2UsImNhcGFiaWxpdGllcyI6eyJkcm9wIjpbIkFMTCJdfX19XSwic2VjdXJpdHlDb250ZXh0Ijp7InJ1bkFzTm9uUm9vdCI6dHJ1ZX0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im5yaS1wbHVnaW5zLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciIsInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMH19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoibnJpLXBsdWdpbnMtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6Ik93bk5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IlNpbmdsZU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6Ik11bHRpTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJBbGxOYW1lc3BhY2VzIn1dLCJrZXl3b3JkcyI6WyJucmktcGx1Z2lucyIsIm5yaSIsImNyaS1vIiwiY29udGFpbmVyZCIsImt1YmVybmV0ZXMiXSwibGlua3MiOlt7Im5hbWUiOiJOcmkgUGx1Z2lucyBPcGVyYXRvciIsInVybCI6Imh0dHBzOi8vbnJpLXBsdWdpbnMtb3BlcmF0b3IuZG9tYWluIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJmZXJ1empvbi5tdXlhc3Nhcm92QGludGVsLmNvbSIsIm5hbWUiOiJmbXV5YXNzYXJvdiJ9XSwibWF0dXJpdHkiOiJhbHBoYSIsInByb3ZpZGVyIjp7Im5hbWUiOiJucmktcGx1Z2lucyBtYWludGFpbmVycyIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9mbXV5YXNzYXJvdi9ucmktcGx1Z2lucy1vcGVyYXRvciJ9LCJ2ZXJzaW9uIjoiMC4wLjEifX0=
relatedImages:
- image: docker.io/fmuyassarov/nri-plugins-operator-bundle:v0.0.1
  name: ""
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
  name: ""
- image: ghcr.io/containers/nri-plugins-operator:unstable
  name: ""
schema: olm.bundle
